{"ast":null,"code":"var _jsxFileName = \"D:\\\\MBA\\\\project_crypto\\\\frontend\\\\src\\\\components\\\\SurveyForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst surveyQuestions = {\n  student: [{\n    question: \"What are your favorite subjects?\",\n    options: [\"Math\", \"Science\", \"Literature\", \"Art\"]\n  }, {\n    question: \"Preferred learning environment?\",\n    options: [\"In-person\", \"Online\", \"Hybrid\"]\n  }, {\n    question: \"Extracurricular interests?\",\n    options: [\"Sports\", \"Music\", \"Art\", \"Tech\"]\n  }, {\n    question: \"What's most challenging in your studies?\",\n    options: [\"Time management\", \"Content\", \"Exams\", \"Motivation\"]\n  }, {\n    question: \"How do you prepare for exams?\",\n    options: [\"Solo study\", \"Group study\", \"Online resources\", \"Tutoring\"]\n  }, {\n    question: \"What motivates you to learn?\",\n    options: [\"Career goals\", \"Interest in subject\", \"Grades\", \"Personal growth\"]\n  }, {\n    question: \"Do you prefer theoretical or practical learning?\",\n    options: [\"Theoretical\", \"Practical\"]\n  }, {\n    question: \"How often do you seek help from professors?\",\n    options: [\"Often\", \"Sometimes\", \"Rarely\", \"Never\"]\n  }, {\n    question: \"What resources do you use for studying?\",\n    options: [\"Textbooks\", \"Internet\", \"Library\", \"Peers\"]\n  }, {\n    question: \"Are you satisfied with your academic program?\",\n    options: [\"Yes\", \"No\", \"Somewhat\"]\n  }],\n  trader: [{\n    question: \"Which trading strategies do you employ?\",\n    options: [\"Day trading\", \"Swing trading\", \"Long-term investment\", \"Scalping\"]\n  }, {\n    question: \"Preferred markets?\",\n    options: [\"Stocks\", \"Forex\", \"Cryptocurrency\", \"Commodities\"]\n  }, {\n    question: \"How do you manage risk?\",\n    options: [\"Stop loss\", \"Diversification\", \"Hedging\", \"Position sizing\"]\n  }, {\n    question: \"What trading platforms do you use?\",\n    options: [\"MetaTrader\", \"Robinhood\", \"Binance\", \"Interactive Brokers\"]\n  }, {\n    question: \"Do you use technical analysis?\",\n    options: [\"Yes\", \"No\"]\n  }, {\n    question: \"How do you stay informed?\",\n    options: [\"News\", \"Blogs\", \"Social media\", \"Broker research\"]\n  }, {\n    question: \"Do you trade full-time or part-time?\",\n    options: [\"Full-time\", \"Part-time\"]\n  }, {\n    question: \"What's your approach to market volatility?\",\n    options: [\"Embrace\", \"Avoid\", \"Adapt\"]\n  }, {\n    question: \"How do you handle trading losses?\",\n    options: [\"Review strategy\", \"Take a break\", \"Ignore\", \"Learn from it\"]\n  }, {\n    question: \"Is trading your primary income source?\",\n    options: [\"Yes\", \"No\"]\n  }],\n  bankEmployee: [{\n    question: \"What banking services do you primarily handle?\",\n    options: [\"Loans\", \"Savings\", \"Investments\", \"Customer service\"]\n  }, {\n    question: \"How do you manage customer complaints?\",\n    options: [\"Listen and resolve\", \"Escalate\", \"Apologize\", \"Offer solutions\"]\n  }, {\n    question: \"What tools do you use for your job?\",\n    options: [\"CRM software\", \"Excel\", \"Banking software\", \"Email\"]\n  }, {\n    question: \"How often do you deal with compliance issues?\",\n    options: [\"Daily\", \"Weekly\", \"Monthly\", \"Rarely\"]\n  }, {\n    question: \"What motivates you at work?\",\n    options: [\"Customer satisfaction\", \"Job security\", \"Career growth\", \"Teamwork\"]\n  }, {\n    question: \"Do you prefer working with individuals or businesses?\",\n    options: [\"Individuals\", \"Businesses\"]\n  }, {\n    question: \"How do you keep up with banking regulations?\",\n    options: [\"Seminars\", \"Online courses\", \"News\", \"Internal training\"]\n  }, {\n    question: \"What's the most challenging part of your job?\",\n    options: [\"Regulatory compliance\", \"Technology\", \"Customer service\", \"Sales targets\"]\n  }, {\n    question: \"Are you involved in digital banking initiatives?\",\n    options: [\"Yes\", \"No\"]\n  }, {\n    question: \"How do you handle stress at work?\",\n    options: [\"Breaks\", \"Meditation\", \"Exercise\", \"Support from colleagues\"]\n  }]\n};\nfunction SurveyForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    ageGroup: '',\n    section: '',\n    answers: {}\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/api/submit', formData, {\n        responseType: 'arraybuffer',\n        headers: {\n          'Accept': 'application/pdf'\n        }\n      });\n\n      // Convert response data to Blob\n      const blob = new Blob([response.data], {\n        type: 'application/pdf'\n      });\n\n      // Create a link element, set its attributes, and append it to the body\n      const link = document.createElement('a');\n      link.href = window.URL.createObjectURL(blob);\n      link.download = 'survey_submission.pdf';\n      link.click();\n      alert('Survey submitted and PDF downloaded!');\n    } catch (error) {\n      console.error('Error submitting survey:', error);\n      alert('There was an error submitting your survey. Please try again.');\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleMultiSelect = (question, option) => {\n    let newAnswers = {\n      ...formData.answers\n    };\n    if (!newAnswers[question]) {\n      newAnswers[question] = [];\n    }\n    if (newAnswers[question].includes(option)) {\n      newAnswers[question] = newAnswers[question].filter(opt => opt !== option);\n    } else {\n      newAnswers[question].push(option);\n    }\n    setFormData({\n      ...formData,\n      answers: newAnswers\n    });\n  };\n  const renderQuestions = () => {\n    if (!formData.section) return null;\n    return surveyQuestions[formData.section].map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: q.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), q.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: () => handleMultiSelect(q.question, option),\n          checked: formData.answers[q.question] && formData.answers[q.question].includes(option)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), \" \", option]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"ageGroup\",\n      onChange: handleChange,\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Age Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"18-25\",\n        children: \"18-25\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"26-35\",\n        children: \"26-35\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"36-50\",\n        children: \"36-50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"50+\",\n        children: \"50+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"section\",\n      onChange: handleChange,\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"student\",\n        children: \"Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"trader\",\n        children: \"Trader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"bankEmployee\",\n        children: \"Bank Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), renderQuestions(), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(SurveyForm, \"7fljtSHiXxq6zAQqdT48H1Bms8A=\");\n_c = SurveyForm;\nexport default SurveyForm;\nvar _c;\n$RefreshReg$(_c, \"SurveyForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","surveyQuestions","student","question","options","trader","bankEmployee","SurveyForm","_s","formData","setFormData","name","email","ageGroup","section","answers","handleSubmit","e","preventDefault","response","post","responseType","headers","blob","Blob","data","type","link","document","createElement","href","window","URL","createObjectURL","download","click","alert","error","console","handleChange","value","target","handleMultiSelect","option","newAnswers","includes","filter","opt","push","renderQuestions","map","q","index","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","checked","onSubmit","placeholder","required","_c","$RefreshReg$"],"sources":["D:/MBA/project_crypto/frontend/src/components/SurveyForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst surveyQuestions = {\r\n  student: [\r\n    { question: \"What are your favorite subjects?\", options: [\"Math\", \"Science\", \"Literature\", \"Art\"] },\r\n    { question: \"Preferred learning environment?\", options: [\"In-person\", \"Online\", \"Hybrid\"] },\r\n    { question: \"Extracurricular interests?\", options: [\"Sports\", \"Music\", \"Art\", \"Tech\"] },\r\n    { question: \"What's most challenging in your studies?\", options: [\"Time management\", \"Content\", \"Exams\", \"Motivation\"] },\r\n    { question: \"How do you prepare for exams?\", options: [\"Solo study\", \"Group study\", \"Online resources\", \"Tutoring\"] },\r\n    { question: \"What motivates you to learn?\", options: [\"Career goals\", \"Interest in subject\", \"Grades\", \"Personal growth\"] },\r\n    { question: \"Do you prefer theoretical or practical learning?\", options: [\"Theoretical\", \"Practical\"] },\r\n    { question: \"How often do you seek help from professors?\", options: [\"Often\", \"Sometimes\", \"Rarely\", \"Never\"] },\r\n    { question: \"What resources do you use for studying?\", options: [\"Textbooks\", \"Internet\", \"Library\", \"Peers\"] },\r\n    { question: \"Are you satisfied with your academic program?\", options: [\"Yes\", \"No\", \"Somewhat\"] }\r\n  ],\r\n  trader: [\r\n    { question: \"Which trading strategies do you employ?\", options: [\"Day trading\", \"Swing trading\", \"Long-term investment\", \"Scalping\"] },\r\n    { question: \"Preferred markets?\", options: [\"Stocks\", \"Forex\", \"Cryptocurrency\", \"Commodities\"] },\r\n    { question: \"How do you manage risk?\", options: [\"Stop loss\", \"Diversification\", \"Hedging\", \"Position sizing\"] },\r\n    { question: \"What trading platforms do you use?\", options: [\"MetaTrader\", \"Robinhood\", \"Binance\", \"Interactive Brokers\"] },\r\n    { question: \"Do you use technical analysis?\", options: [\"Yes\", \"No\"] },\r\n    { question: \"How do you stay informed?\", options: [\"News\", \"Blogs\", \"Social media\", \"Broker research\"] },\r\n    { question: \"Do you trade full-time or part-time?\", options: [\"Full-time\", \"Part-time\"] },\r\n    { question: \"What's your approach to market volatility?\", options: [\"Embrace\", \"Avoid\", \"Adapt\"] },\r\n    { question: \"How do you handle trading losses?\", options: [\"Review strategy\", \"Take a break\", \"Ignore\", \"Learn from it\"] },\r\n    { question: \"Is trading your primary income source?\", options: [\"Yes\", \"No\"] }\r\n  ],\r\n  bankEmployee: [\r\n    { question: \"What banking services do you primarily handle?\", options: [\"Loans\", \"Savings\", \"Investments\", \"Customer service\"] },\r\n    { question: \"How do you manage customer complaints?\", options: [\"Listen and resolve\", \"Escalate\", \"Apologize\", \"Offer solutions\"] },\r\n    { question: \"What tools do you use for your job?\", options: [\"CRM software\", \"Excel\", \"Banking software\", \"Email\"] },\r\n    { question: \"How often do you deal with compliance issues?\", options: [\"Daily\", \"Weekly\", \"Monthly\", \"Rarely\"] },\r\n    { question: \"What motivates you at work?\", options: [\"Customer satisfaction\", \"Job security\", \"Career growth\", \"Teamwork\"] },\r\n    { question: \"Do you prefer working with individuals or businesses?\", options: [\"Individuals\", \"Businesses\"] },\r\n    { question: \"How do you keep up with banking regulations?\", options: [\"Seminars\", \"Online courses\", \"News\", \"Internal training\"] },\r\n    { question: \"What's the most challenging part of your job?\", options: [\"Regulatory compliance\", \"Technology\", \"Customer service\", \"Sales targets\"] },\r\n    { question: \"Are you involved in digital banking initiatives?\", options: [\"Yes\", \"No\"] },\r\n    { question: \"How do you handle stress at work?\", options: [\"Breaks\", \"Meditation\", \"Exercise\", \"Support from colleagues\"] }\r\n  ]\r\n};\r\n\r\nfunction SurveyForm() {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    ageGroup: '',\r\n    section: '',\r\n    answers: {}\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/submit', formData, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n          'Accept': 'application/pdf'\r\n        }\r\n      });\r\n\r\n      // Convert response data to Blob\r\n      const blob = new Blob([response.data], { type: 'application/pdf' });\r\n      \r\n      // Create a link element, set its attributes, and append it to the body\r\n      const link = document.createElement('a');\r\n      link.href = window.URL.createObjectURL(blob);\r\n      link.download = 'survey_submission.pdf';\r\n      link.click();\r\n\r\n      alert('Survey submitted and PDF downloaded!');\r\n\r\n    } catch (error) {\r\n      console.error('Error submitting survey:', error);\r\n      alert('There was an error submitting your survey. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleMultiSelect = (question, option) => {\r\n    let newAnswers = { ...formData.answers };\r\n    if (!newAnswers[question]) {\r\n      newAnswers[question] = [];\r\n    }\r\n    if (newAnswers[question].includes(option)) {\r\n      newAnswers[question] = newAnswers[question].filter(opt => opt !== option);\r\n    } else {\r\n      newAnswers[question].push(option);\r\n    }\r\n    setFormData({ ...formData, answers: newAnswers });\r\n  };\r\n\r\n  const renderQuestions = () => {\r\n    if (!formData.section) return null;\r\n    return surveyQuestions[formData.section].map((q, index) => (\r\n      <div key={index}>\r\n        <h4>{q.question}</h4>\r\n        {q.options.map(option => (\r\n          <label key={option}>\r\n            <input \r\n              type=\"checkbox\" \r\n              onChange={() => handleMultiSelect(q.question, option)}\r\n              checked={formData.answers[q.question] && formData.answers[q.question].includes(option)}\r\n            /> {option}\r\n          </label>\r\n        ))}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" name=\"name\" placeholder=\"Name\" onChange={handleChange} required />\r\n      <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleChange} required />\r\n      <select name=\"ageGroup\" onChange={handleChange} required>\r\n        <option value=\"\">Select Age Group</option>\r\n        <option value=\"18-25\">18-25</option>\r\n        <option value=\"26-35\">26-35</option>\r\n        <option value=\"36-50\">36-50</option>\r\n        <option value=\"50+\">50+</option>\r\n      </select>\r\n      <select name=\"section\" onChange={handleChange} required>\r\n        <option value=\"\">Select Section</option>\r\n        <option value=\"student\">Student</option>\r\n        <option value=\"trader\">Trader</option>\r\n        <option value=\"bankEmployee\">Bank Employee</option>\r\n      </select>\r\n      {renderQuestions()}\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SurveyForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}