{"ast":null,"code":"import React, { useState } from 'react';\nimport axios from 'axios';\n\n// ... your existing code\n\nconst handleSubmit = async e => {\n  e.preventDefault();\n  try {\n    const response = await axios.post('http://localhost:5000/api/submit', formData, {\n      responseType: 'arraybuffer',\n      // This tells axios to expect binary data\n      headers: {\n        'Accept': 'application/pdf'\n      }\n    });\n\n    // Create a Blob from the PDF Stream\n    const blob = new Blob([response.data], {\n      type: 'application/pdf'\n    });\n\n    // Create a link element, set its attributes, and append it to the body\n    const link = document.createElement('a');\n    link.href = window.URL.createObjectURL(blob);\n    link.download = 'survey_submission.pdf';\n    link.click();\n    alert('Survey submitted and PDF downloaded!');\n  } catch (error) {\n    console.error('Error submitting survey:', error);\n    alert('There was an error submitting your survey. Please try again.');\n  }\n};\n\n// ... rest of your component","map":{"version":3,"names":["React","useState","axios","handleSubmit","e","preventDefault","response","post","formData","responseType","headers","blob","Blob","data","type","link","document","createElement","href","window","URL","createObjectURL","download","click","alert","error","console"],"sources":["D:/MBA/project_crypto/frontend/src/components/SurveyForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n// ... your existing code\r\n\r\nconst handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  try {\r\n    const response = await axios.post('http://localhost:5000/api/submit', formData, {\r\n      responseType: 'arraybuffer',  // This tells axios to expect binary data\r\n      headers: {\r\n        'Accept': 'application/pdf'\r\n      }\r\n    });\r\n\r\n    // Create a Blob from the PDF Stream\r\n    const blob = new Blob([response.data], { type: 'application/pdf' });\r\n    \r\n    // Create a link element, set its attributes, and append it to the body\r\n    const link = document.createElement('a');\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.download = 'survey_submission.pdf';\r\n    link.click();\r\n\r\n    alert('Survey submitted and PDF downloaded!');\r\n\r\n  } catch (error) {\r\n    console.error('Error submitting survey:', error);\r\n    alert('There was an error submitting your survey. Please try again.');\r\n  }\r\n};\r\n\r\n// ... rest of your component"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;AAEA,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,kCAAkC,EAAEC,QAAQ,EAAE;MAC9EC,YAAY,EAAE,aAAa;MAAG;MAC9BC,OAAO,EAAE;QACP,QAAQ,EAAE;MACZ;IACF,CAAC,CAAC;;IAEF;IACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACN,QAAQ,CAACO,IAAI,CAAC,EAAE;MAAEC,IAAI,EAAE;IAAkB,CAAC,CAAC;;IAEnE;IACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACV,IAAI,CAAC;IAC5CI,IAAI,CAACO,QAAQ,GAAG,uBAAuB;IACvCP,IAAI,CAACQ,KAAK,CAAC,CAAC;IAEZC,KAAK,CAAC,sCAAsC,CAAC;EAE/C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChDD,KAAK,CAAC,8DAA8D,CAAC;EACvE;AACF,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}